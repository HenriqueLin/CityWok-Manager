"""Add expense module

Revision ID: 06e653a729d1
Revises: 58812dfc1d2a
Create Date: 2021-07-28 02:30:51.063650

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import citywok_ms
from citywok_ms.expense.models import LABOR, MATERIAL, OPERATION, TAX

# revision identifiers, used by Alembic.
revision = "06e653a729d1"
down_revision = "58812dfc1d2a"
branch_labels = None
depends_on = None

category_choice = tuple((x, y) for x, _, y in (LABOR + OPERATION + MATERIAL + TAX))


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "expense",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column(
            "category",
            sqlalchemy_utils.types.choice.ChoiceType(category_choice),
            nullable=False,
        ),
        sa.Column("remark", sa.Text(), nullable=True),
        sa.Column("cash", citywok_ms.utils.models.SqliteDecimal(2), nullable=True),
        sa.Column("check", citywok_ms.utils.models.SqliteDecimal(2), nullable=True),
        sa.Column("card", citywok_ms.utils.models.SqliteDecimal(2), nullable=True),
        sa.Column("transfer", citywok_ms.utils.models.SqliteDecimal(2), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_expense")),
    )
    op.create_table(
        "salary_payment",
        sa.Column("month", sa.Date(), nullable=False),
        sa.PrimaryKeyConstraint("month", name=op.f("pk_salary_payment")),
    )
    op.create_table(
        "labor_expense",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("month_id", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employee.id"],
            name=op.f("fk_labor_expense_employee_id_employee"),
        ),
        sa.ForeignKeyConstraint(
            ["id"], ["expense.id"], name=op.f("fk_labor_expense_id_expense")
        ),
        sa.ForeignKeyConstraint(
            ["month_id"],
            ["salary_payment.month"],
            name=op.f("fk_labor_expense_month_id_salary_payment"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_labor_expense")),
    )
    op.create_table(
        "non_labor_expense",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("supplier_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["expense.id"], name=op.f("fk_non_labor_expense_id_expense")
        ),
        sa.ForeignKeyConstraint(
            ["supplier_id"],
            ["supplier.id"],
            name=op.f("fk_non_labor_expense_supplier_id_supplier"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_non_labor_expense")),
    )
    with op.batch_alter_table("file", schema=None) as batch_op:
        batch_op.add_column(sa.Column("expense_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("salary_payment_id", sa.Date(), nullable=True))
        batch_op.create_foreign_key(
            batch_op.f("fk_file_expense_id_expense"), "expense", ["expense_id"], ["id"]
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_file_salary_payment_id_salary_payment"),
            "salary_payment",
            ["salary_payment_id"],
            ["month"],
        )

    with op.batch_alter_table("order", schema=None) as batch_op:
        batch_op.add_column(sa.Column("expense_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key(
            batch_op.f("fk_order_expense_id_expense"), "expense", ["expense_id"], ["id"]
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("order", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_order_expense_id_expense"), type_="foreignkey"
        )
        batch_op.drop_column("expense_id")

    with op.batch_alter_table("file", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_file_salary_payment_id_salary_payment"), type_="foreignkey"
        )
        batch_op.drop_constraint(
            batch_op.f("fk_file_expense_id_expense"), type_="foreignkey"
        )
        batch_op.drop_column("salary_payment_id")
        batch_op.drop_column("expense_id")

    op.drop_table("non_labor_expense")
    op.drop_table("labor_expense")
    op.drop_table("salary_payment")
    op.drop_table("expense")
    # ### end Alembic commands ###
